//
// Common variables
//===========================
$mid-small: 550px;
$end-small: 800px;
$intermediate-break: 1000px;
$gutter: 10px;
$max-width: 940px;

$primary: #003768;  // Navy Blue
$primary-contrast: #eee7d8; // beige
$accent: #96d4e7; // baby blue
$text: #333;
$alert: #c00;
$links: #0047ba; // blue

// Place Fonts
$main-font: Verdana, Arial, sans-serif;
$secondary-font: Arial, sans-serif;

//
// extends and Mixins
//===========================

// Breakpoints
@mixin breakpoint($break) {
    @media screen and (min-width:$break) {
        @content;
    }
}

@mixin mid-small {
    @include breakpoint($mid-small) {
        @content;
    }
}

@mixin end-small {
    @include breakpoint($end-small) {
        @content;
    }
}

@mixin intermediate-break {
    @include breakpoint($intermediate-break) {
        @content;
    }
}

// Centered Wrapper
@mixin wrapper($max) {
    margin: 0 auto;
    max-width: $max;
}

// Clear Fix
@mixin clear-fix {
   &:after {
       clear: both;
       content: '';
       display: block;
   }
}

// Buttons
%button-base {
    text-align: center;
    line-height: 1;
    padding: 7.5px;
    cursor: pointer;
}

@mixin buttons($width, $color, $background) {
   @extend %button-base;
   width: $width;
   color: $color;
   background: $background;
   font-size: $font-size;
   transition: opacity .3s;

   &:hover {
       background: $color;
       color: $background;
       color: #fff;
   }
}

// For png images
@mixin png($image, $color: transparent, $position: 0 0, $repeat: no-repeat) {
    background: {
        color: $color;
        image: url('../v1_0/img/' + $image + '.png');
        position: $position;
        repeat: $repeat;
    }
}

// Flexbox
@mixin flex-box {
   display: -webkit-box;
   display: -moz-box;
   display: -ms-flexbox;
   display: -webkit-flex;
   display: flex;
   -webkit-box-direction: normal;
   -moz-box-direction: normal;
   -webkit-box-orient: horizontal;
   -moz-box-orient: horizontal;
   -webkit-flex-direction: row;
   -ms-flex-direction: row;
   flex-direction: row;
   -webkit-flex-wrap: wrap;
   -ms-flex-wrap: wrap;
   flex-wrap: wrap;
   -webkit-box-pack: justify;
   -moz-box-pack: justify;
   -webkit-justify-content: space-between;
   -ms-flex-pack: justify;
   justify-content: space-between;
   -webkit-align-content: stretch;
   -ms-flex-line-pack: stretch;
   align-content: stretch;
   -webkit-box-align: start;
   -moz-box-align: start;
   -webkit-align-items: flex-start;
   -ms-flex-align: start;
   align-items: flex-start;
}

// When using be sure parent element is relative;
@mixin centered($horizontal: true, $vertical: true) {
 position: absolute;
 @if ($horizontal and $vertical) {
   top: 50%;
   left: 50%;
   transform: translate(-50%, -50%);
 } @else if ($horizontal) {
   left: 50%;
   transform: translate(-50%, 0);
 } @else if ($vertical) {
   top: 50%;
   transform: translate(0, -50%);
 }
}

// Rotate
@mixin rotate($axis: 45deg) {
    -webkit-transform: rotate($axis);
    -moz-transform: rotate($axis);
    -ms-transform: rotate($axis);
    -o-transform: rotate($axis);
    transform: rotate($axis);
}

@mixin triangle($color, $width, $height) {
    content: '';
    width: 0;
    height: 0;
    border-style: solid;
    border-width: $height ($width/2) 0 ($width/2);
    border-color: $color transparent transparent;
}

@mixin plus-minus($color, $width, $height, $top, $right) {
    text-indent: -9999em;

    &:before, &:after {
        content: '';
        display: block;
        width: $width;
        height: $height;
        position: absolute;
        background: $color;
        top: $top;
        right: $right;
    }

    &:before {
        @include rotate(90deg);
    }

    // helper class needed to make a minus when opened.
    &.opened:before  {
        display: none;
    }
}

// Style Placeholder text
@mixin input-placeholder {
    &.placeholder { @content; }
    &:-moz-placeholder { @content; }
    &::-moz-placeholder { @content; }
    &:-ms-input-placeholder { @content; }
    &::-webkit-input-placeholder { @content; }
}


// Used for scaling iframes
//Function
@function get-vw($target, $container-width) {
    // 1 vw is equal to 1% of the viewport width
    $vw-context: ($container-width * .01) * 1; // 1% viewport width
    $vw-size: ($target/$vw-context) * 1;
    @return #{$vw-size}vw;
}

//Mixin
@mixin vw-height($min-height, $max-height, $container-width) {
    min-height: $min-height;
    max-height: $max-height;
    height: get-vw($max-height, $container-width);
}

//
// base layout
//=================================================================================
body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, img, ins, kbd, q, s, samp, tt, var,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
    margin: 0;
    padding: 0;
    border: 0;
    font: inherit;
    vertical-align: baseline;
}


// Hide Content
*[aria-hidden='true'] {
    display: none;
}

// Border Box for all
html {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    font-size: 62.5%;
}

*,
*:before,
*:after {
    -webkit-box-sizing: inherit;
    -moz-box-sizing: inherit;
    box-sizing: inherit;
}

body {
    color: $text;
    font-size: 1.3rem;
    font-family: $main-font;
    -webkit-font-smoothing: antialiased;
    margin: 0;
    overflow-x: hidden;
    min-width: 320px;
    line-height: 1.2;
}

button {
   border: 0 none;
   background: none;
   -webkit-appearance: none;
   -moz-appearance: none;
}

input[type='search'] {
   -webkit-box-sizing: border-box;
   -moz-box-sizing: border-box;
   box-sizing: border-box;
   -webkit-appearance: none;
}

input[type='submit'] {
   -webkit-appearance: none;
}

input, select {
   width: 100%;
   background: #fff;
   font-size: 1.6rem;
   height: 39px;
   border-radius: 0;
}

input {
   padding: 9px 10px;
}

select {
   padding: 4px;
}

ol, ul {
   list-style: none;
}

img {
   max-width: 100%;
}

a {
    text-decoration: none;
}

// For Wrapping Iframe videos responsively
.video-wrapper {
   position: relative;
   padding-bottom: 46.25%;
   padding-top: 9.25%;
   height: 0;
   font-size: 0;

   iframe, img {
       position: absolute;
       top: 0;
       left: 0;
       width: 100%;
       height: 100%;
   }

   img {
     cursor: pointer;
   }
}
